#!/bin/bash

# CryptoBook Bot - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# –ê–≤—Ç–æ—Ä: CryptoBook Bot Team
# –í–µ—Ä—Å–∏—è: 1.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    if ! command -v python3 &> /dev/null; then
        print_error "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
    if ! command -v node &> /dev/null; then
        print_error "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ ngrok
    if ! command -v ngrok &> /dev/null; then
        print_warning "ngrok –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        brew install ngrok
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
    if ! pg_isready -h 127.0.0.1 -p 5432 &> /dev/null; then
        print_error "PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã!"
}

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
activate_venv() {
    print_status "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [ ! -d ".venv" ]; then
        print_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
        exit 1
    fi
    
    source .venv/bin/activate
    print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±–µ–∫–µ–Ω–¥–∞
install_backend_deps() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±–µ–∫–µ–Ω–¥–∞..."
    pip install -r backend/requirements.txt
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±–µ–∫–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
install_frontend_deps() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
    cd frontend
    npm install
    cd ..
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
check_database() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    cd backend
    python scripts/init_db.py
    cd ..
    print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!"
}

# –ó–∞–ø—É—Å–∫ –±–µ–∫–µ–Ω–¥–∞
start_backend() {
    print_status "–ó–∞–ø—É—Å–∫ –±–µ–∫–µ–Ω–¥–∞..."
    cd backend
    python main.py &
    BACKEND_PID=$!
    cd ..
    print_success "–ë–µ–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: $BACKEND_PID)"
}

# –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
start_frontend() {
    print_status "–ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
    cd frontend
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è API
    # –í Telegram Web App –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ngrok URL
    export REACT_APP_API_URL="http://localhost:8001/api"
    npm start &
    FRONTEND_PID=$!
    cd ..
    print_success "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: $FRONTEND_PID)"
}

# –ó–∞–ø—É—Å–∫ —Ç—É–Ω–Ω–µ–ª–µ–π (ngrok + serveo)
start_tunnels() {
    print_status "–ó–∞–ø—É—Å–∫ —Ç—É–Ω–Ω–µ–ª–µ–π (ngrok + serveo)..."
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º ngrok –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    ngrok http 3000 > /dev/null 2>&1 &
    NGROK_PID=$!
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ ngrok
    sleep 5
    
    # –ü–æ–ª—É—á–∞–µ–º ngrok URL –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    print_status "–ü–æ–ª—É—á–µ–Ω–∏–µ ngrok URL..."
    
    # –ü—Ä–æ–±—É–µ–º —Å jq
    NGROK_FRONTEND_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' 2>/dev/null)
    
    # Fallback –µ—Å–ª–∏ jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    if [ -z "$NGROK_FRONTEND_URL" ] || [ "$NGROK_FRONTEND_URL" = "null" ]; then
        print_status "jq –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º grep..."
        NGROK_FRONTEND_URL=$(curl -s http://localhost:4040/api/tunnels | grep -o '"public_url":"[^"]*"' | cut -d'"' -f4 | head -1)
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if [ -z "$NGROK_FRONTEND_URL" ] || [ "$NGROK_FRONTEND_URL" = "null" ]; then
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ngrok URL!"
        print_error "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ ngrok –∑–∞–ø—É—â–µ–Ω: curl http://localhost:4040/api/tunnels"
        exit 1
    fi
    
    print_success "–ü–æ–ª—É—á–µ–Ω ngrok URL: $NGROK_FRONTEND_URL"
    
    print_success "ngrok —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥: $NGROK_FRONTEND_URL"
    print_success "–±—ç–∫–µ–Ω–¥: http://localhost:8001 (–ª–æ–∫–∞–ª—å–Ω—ã–π)"
    
    # –û—Å—Ç–∞–≤–ª—è–µ–º –±—ç–∫–µ–Ω–¥ –ª–æ–∫–∞–ª—å–Ω—ã–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏ –≤ React
    if [ -f "frontend/public/index.html" ]; then
        sed -i.bak "s|window.__BACKEND_URL__ = '/api';|window.__BACKEND_URL__ = '/api';|g" frontend/public/index.html
        print_success "–ë—ç–∫–µ–Ω–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏"
    fi
}

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
wait_for_services() {
    print_status "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ñ–¥–µ–º –±–µ–∫–µ–Ω–¥
    for i in {1..30}; do
        if curl -s http://localhost:8001/api/status > /dev/null 2>&1; then
            print_success "–ë–µ–∫–µ–Ω–¥ –≥–æ—Ç–æ–≤!"
            break
        fi
        sleep 1
    done
    
    # –ñ–¥–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    for i in {1..30}; do
        if curl -s http://localhost:3000 > /dev/null 2>&1; then
            print_success "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –≥–æ—Ç–æ–≤!"
            break
        fi
        sleep 1
    done
}

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
show_info() {
    echo ""
    echo "üöÄ CryptoBook Bot –∑–∞–ø—É—â–µ–Ω!"
    echo "=================================="
    echo "üì± Telegram Bot: –†–∞–±–æ—Ç–∞–µ—Ç"
echo "üåê Backend API: http://localhost:8001"
echo "üé® Frontend: http://localhost:3000"
echo "üîó Public URL (Frontend): $NGROK_FRONTEND_URL"
echo "üîó Backend: http://localhost:8001 (–ª–æ–∫–∞–ª—å–Ω—ã–π)"
    echo ""
    echo "üìä API Documentation: http://localhost:8001/docs"
    echo "üìã Swagger UI: http://localhost:8001/docs"
    echo ""
    echo "üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
    echo ""
}

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    print_status "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    if [ ! -z "$BACKEND_PID" ]; then
        kill $BACKEND_PID 2>/dev/null || true
        print_success "–ë–µ–∫–µ–Ω–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if [ ! -z "$FRONTEND_PID" ]; then
        kill $FRONTEND_PID 2>/dev/null || true
        print_success "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if [ ! -z "$NGROK_PID" ]; then
        kill $NGROK_PID 2>/dev/null || true
        print_success "ngrok –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # serveo –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    
    print_success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
    exit 0
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ CryptoBook Bot..."
    echo "================================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_dependencies
    activate_venv
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if [ "$1" = "--install" ]; then
        install_backend_deps
        install_frontend_deps
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
    check_database
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    start_backend
    start_frontend
    start_tunnels
    
    # –û–∂–∏–¥–∞–Ω–∏–µ
    wait_for_services
    
    # –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    show_info
    
    # –û–∂–∏–¥–∞–Ω–∏–µ
    wait
}

# –ó–∞–ø—É—Å–∫
main "$@" 