import asyncio
import uvicorn
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from fastapi import FastAPI
from contextlib import asynccontextmanager

from infrastructure.database.connection import init_db
from presentation.web_api.app import app as fastapi_app
from presentation.telegram_handlers.router import router as telegram_router
from shared.config import settings

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –±–æ—Ç–∞
bot = None
dp = None

@asynccontextmanager
async def lifespan(app: FastAPI):
    global bot, dp
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    init_db()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π)
    if settings.BOT_TOKEN and settings.BOT_TOKEN != "your_telegram_bot_token_here":
        try:
            bot = Bot(token=settings.BOT_TOKEN)
            dp = Dispatcher(storage=MemoryStorage())
            dp.include_router(telegram_router)
            
            # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
            asyncio.create_task(dp.start_polling(bot))
            print("‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è Telegram –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω: {e}")
            print("üì± –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤–µ–±-–≤–µ—Ä—Å–∏—è")
    else:
        print("üì± Telegram –±–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω - —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤–µ–±-–≤–µ—Ä—Å–∏—è")
    
    yield
    
    # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
    if bot:
        await bot.session.close()
    print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

app = FastAPI(
    title="Crypto Bot API",
    version="1.0.0",
    lifespan=lifespan
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä –Ω–∞–ø—Ä—è–º—É—é
from presentation.web_api.app import api_router
app.include_router(api_router, prefix="/api")

if __name__ == "__main__":
    import os
    port = int(os.environ.get("PORT", settings.API_PORT))  # Railway –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PORT
    
    uvicorn.run(
        "main:app",
        host="0.0.0.0",  # –°–ª—É—à–∞–µ–º –≤—Å–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
        port=port,
        reload=False,  # –û—Ç–∫–ª—é—á–∞–µ–º reload –¥–ª—è production
        proxy_headers=True,
        forwarded_allow_ips="*",
        access_log=True,
        server_header=False  # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–≥–æ–ª–æ–≤–∫–∞ Host
    ) 