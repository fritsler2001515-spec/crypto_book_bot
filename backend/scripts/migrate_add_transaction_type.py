#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è transaction_type –≤ —Ç–∞–±–ª–∏—Ü—É coin_transactions
"""
import asyncio
import asyncpg
import os
from shared.config import settings

async def migrate_database():
    """–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ transaction_type –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ç–∞–±–ª–∏—Ü—É"""
    
    # –ü–æ–ª—É—á–∞–µ–º URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if settings.DATABASE_URL:
        db_url = settings.DATABASE_URL
    else:
        db_url = f"postgresql://{settings.DB_USER}:{settings.DB_PASS}@{settings.DB_HOST}:{settings.DB_PORT}/{settings.DB_NAME}"
    
    print(f"–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = await asyncpg.connect(db_url)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–æ–ª–æ–Ω–∫–∞
        check_column_query = """
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_name = 'coin_transactions' 
        AND column_name = 'transaction_type';
        """
        
        existing_column = await conn.fetchval(check_column_query)
        
        if existing_column:
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ transaction_type —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É transaction_type...")
            
            # –°–æ–∑–¥–∞–µ–º ENUM —Ç–∏–ø, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            create_enum_query = """
            DO $$ BEGIN
                CREATE TYPE transactiontype AS ENUM ('buy', 'sell');
            EXCEPTION
                WHEN duplicate_object THEN null;
            END $$;
            """
            await conn.execute(create_enum_query)
            print("‚úÖ ENUM —Ç–∏–ø —Å–æ–∑–¥–∞–Ω/–ø—Ä–æ–≤–µ—Ä–µ–Ω")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É —Å –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            add_column_query = """
            ALTER TABLE coin_transactions 
            ADD COLUMN transaction_type transactiontype NOT NULL DEFAULT 'buy';
            """
            await conn.execute(add_column_query)
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ transaction_type –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ (–≤—Å–µ –∫–∞–∫ –ø–æ–∫—É–ø–∫–∏)
            update_existing_query = """
            UPDATE coin_transactions 
            SET transaction_type = 'buy' 
            WHERE transaction_type IS NULL;
            """
            updated_rows = await conn.execute(update_existing_query)
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_rows} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π")
        
        await conn.close()
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(migrate_database())
